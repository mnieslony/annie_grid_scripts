#! /usr/bin/env bash

b0=`basename $0`
export SCRIPTPATH=`dirname $0`
# make script path absolute and resolve symlinks
#export SCRIPTPATH=`readlink -f ${SCRIPTPATH} `

# allow executable in current path
# in case we copied them in along with this script
export PATH=${PATH}:.

export VERSION=2020-10-13
echo " "
echo "$0 $@"
echo "$b0 VERSION $VERSION"
echo " "

export OUTDIR=""
export VERBOSE=0
export RWHNODE=0
export RUNBASE=""  # starting run number
export SEED="" # random # seed

# TOPVOL is normally one of:
#    WORLD_LV      = whole world (implicit default)
#    BLDG_LV       = hall including walls but not dirt
#    EXP_HALL_LV   = inside detector hall only
#    TWATER_LV     = water volume only
#    TWATER_LV is inside TBODY_LV but doesn't include
#                  TBASE_LV or TCONE_LV    
#    TwbLS_LV      = wbLS volume only (inside acrylic SANDI volume)
#export TOPVOL="TWATER_LV"  
export TOPVOL="TwbLS_LV"

# which parameter set in BNBFlux.xml to use
# ANNIE-tank or ANNIE-rock (wider window)
export FLXPSET="ANNIE-tank"

export GDML=annie_v04_sandi.gdml
export UNITS="-L cm -D g_cm3"

export GENLIST="" # equivalent to "Default"

# genie version for setup as of 2019-11-14
export GVERS="v3_00_06c"
export GVERSXSEC="v3_00_04"
export GQUAL="e17:prof:py3"
export XSECQUAL="G1802a00000:e1000:k250"

export FIDCUT=""
export EFACTORS=""
export RFACTORS=""
export ZMIN=""

export NEVT=""
export NPOT=""

# remake files generated by this script
RMGEN=1

# corner points for annie_v01.gdml
export XYZHALL=( -393.70 -213.36   0.0  307.34 1021.08 487.68 )
export XYZBLDG=( -434.34 -259.08 -40.64 347.98 1066.80 528.32 )

##########################################################################
# function to setup a version of genie
setup_genie ()
{
  # updated selection as of 2016-04-15
  
  if [ -z "$GVERS"    ]; then export GVERS="v3_00_06c"             ; fi
  if [ -z "$GVERSXSEC"    ]; then export GVERSXSEC="v3_00_04"             ; fi
  if [ -z "$GQAUL"    ]; then export GQUAL="e17:prof:py3"         ; fi
  if [ -z "$XSECQUAL" ]; then export XSECQUAL="G1802a00000:e1000:k250" ; fi

  source /grid/fermiapp/products/common/etc/setup
  source /cvmfs/larsoft.opensciencegrid.org/products/setup
  #export LARSOFT_UPS=/grid/fermiapp/products/larsoft
  #export RHATCHER_UPS=/annie/app/users/rhatcher/externals
  #export PRODUCTS=${PRODUCTS}:${LARSOFT_UPS}:${RHATCHER_UPS}
  export CODE_BASE=/cvmfs/fermilab.opensciencegrid.org/products
  source ${CODE_BASE}/common/etc/setup
  export PRODUCTS=${PRODUCTS}:${CODE_BASE}/larsoft
  setup genie        ${GVERS} -q ${GQUAL}
  setup genie_phyopt ${GVERSXSEC} -q dkcharmtau
  # do phyopt before xsec in case xsec has its own UserPhysicsOptions.xml
  setup genie_xsec   ${GVERSXSEC}a -q ${XSECQUAL}
  if [ $? -ne 0 ]; then
      echo "$b0: looking for genie_xec ${GVERSXSEC} -q ${XSECQUAL}"
    # might have a letter beyond GENIE code's
    setup genie_xsec   ${GVERSXSEC}a -q ${XSECQUAL}
  fi


  setup ifdhc   # for copying geometry & flux files
  export IFDH_CP_MAXRETRIES=2  # default 8 tries is silly
  
  ### setup dk2nu v01_03_00c -q debug:e9:r5  
  ### setup geant4 v4_10_1_p03 -q e9:debug:qt
  ### setup cmake v3_2_1

  echo "$b0: using PRODUCTS=${PRODUCTS}"
  echo "$b0: using GENIE=${GENIE}"
  echo "$b0: using GENIEXSECFILE=${GENIEXSECFILE}"
}

##########################################################################
usage() {
cat >&2 <<EOF
${b0} -r RUNBASE (-n NEVT | -e POTS) [ -F FIDCUT | -E EFACTORS | -R ROCKBOX ] [ other flags ]

Run a GENIE job
   -o | --outdir=ODIR      output directory
   -r | --run=RUNNUM       run number [$RUNBASE+\${PROCESS}]
   -n | --nevt=NEVENTS     limit by number of events [$NEVT]
   -e | --exposure=POTS    limit by exposure [$NPOT]

   -s | --seed=RNDMSEED    random # seed
   -g | --gdml=GDMLFILE    geometry file [$GDML]
   -t | --topvol=TOPVOL    geometry top volume [$TOPVOL]
   --genlist=GENLIST       select EventGeneratorList [$GENLIST] ""="Default"
   --with-mec              enable CCMEC (equiv to --genlist="DefaultPlusCCMEC")

   --xsec-qual=XSECQUAL    qualifier for genie x-sec setup [$XSECQUAL]

   -F | --fid=FIDCUT       fiducial cut string [$FIDCUT]
   -E | --expand=EFACTORS  create fid cut string by expanding from BLDG
                             extent; if one value then add equally in
                             all directions, if 3 values {-z,transverse,+z}
                             in geometry units (cm) [$EFACTORS]
   -R | --rockbox=RFACTORS create "rock box" style fid cut expanding from BLDG
                             extent.  e.g. 1,100,
                                [0|1]=rockonly
                                100 min size (geom units, eg. cm)
                                0.00425 dE/dx
                                1.05 fudge
                                0 efromwall
                             [$RFACTORS] only "rockonly" (0|1) required
   --rock                  generate in greater rock
                              change TOPVOVL to WORLD_LV
                              use wider flux window
                              push back starting Z to -20m

   -v                      increase verbosity
   -h | --help             this output
        --helpfid          expanded FIDCUT help

   
EOF
}

##########################################################################
process_args() {

  printusage=0
  dorock=0

  # longarg "::" means optional arg, if not supplied given as null string
  # use this for targfile lowth peanut
  TEMP=`getopt -n $0 -s bash -a \
     --longoptions="help outdir: run: nevt: exposure: pots: seed: gdml: topvol: with-mec genlist: xsec-qual: fid: expand: rockbox:: rock helpfid" \
     -o hvo:r:n:e:s:g:t:F:E:R:-: -- "$@" `
  eval set -- "${TEMP}"
  unset TEMP
  while [ $# -gt 0 ]; do
    if [ $VERBOSE -gt 0 ]; then echo "arg processing \$1=$1 \$2=$2" ; fi
    case "$1" in
      "--"              ) shift;                 break  ;;
      -h | --help       ) printusage=1                  ;;
           --helpfid    ) printusage=2                  ;;
      -v                ) let VERBOSE=${VERBOSE}+1      ;;
      -o | --outdir     ) export OUTDIR="$2";    shift  ;;
      -r | --run        ) export RUNBASE="$2";   shift  ;;
      -n | --nevt       ) export NEVT="$2";      shift  ;;
      -e | --exposure   ) export NPOT="$2";      shift  ;;
           --pot*       ) export NPOT="$2";      shift  ;;
      -s | --seed       ) export SEEED="$2";     shift  ;;
      -g | --gdml       ) export GDML="$2";      shift  ;;
      -t | --topvol     ) export TOPVOL="$2";    shift  ;;
      --with-mec        ) export GENLIST="G1802a00000:e1000:k250" ;;
      --genlist         ) export GENLIST="$2";   shift  ;;
      --xsec-qual       ) export XSECQUAL="$2";  shift  ;;
      -F | --fid        ) export FIDCUT="$2";    shift  ;;
      -E | --expand     ) export EFACTORS="$2";  shift  ;;
      -R | --rockbox    ) export RFACTORS="$2"; 
                          if [ -z "$RFACTORS" ]; then RFACTORS=1; fi
                                                 shift  ;;
           --rock       ) export dorock=1;              ;;
      -*                ) echo "unknown flag $opt ($1)"
                          usage
                          ;;
     esac
     shift  # eat up the arg we just used
  done

  usage_exit=0;

  export LIMIT=""
  if [ -n "$NEVT" ]; then
    LIMIT="$LIMIT -n $NEVT"  # number of events
  fi
  if [ -n "$NPOT" ]; then
    LIMIT="$LIMIT -e $NPOT"  # exposure
  fi
  if [ -z "$LIMIT" ]; then
    echo "$b0: you must use either the -n or -e flag to limit run"
    usage_exit=127
  fi
  
  if [ -z "$PROCESS" ]; then PROCESS=0; fi # not running in condor
  if [ -z "$OUTDIR" ]; then
    echo "$b0: you must set the output directory using the -o flag"
    usage_exit=127
  fi
  if [ -z "$RUNBASE" ]; then
    echo "$b0: you must set the starting run number using the -r flag"
    usage_exit=127
  fi
  let RUN=${RUNBASE}+${PROCESS}
  export RUN

  nfid=0
  if [ -n "$FIDCUT"   ]; then let nfid=$nfid+1; fi
  if [ -n "$EFACTORS" ]; then let nfid=$nfid+1; fi
  if [ -n "$RFACTORS" ]; then let nfid=$nfid+1; fi
  if [ $nfid -gt 1 ]; then
    echo "$b0: you an only use one of the flags -F or -E or -R"
    usage_exit=127
  fi

  if [ $dorock -ne 0 ]; then
    TOPVOL="WORLD_LV"
    FLXPSET="ANNIE-rock"
    ZMIN="-2000"  # start at z = -20m  (given in geom units cm)
  fi

  # show the defaults correctly now
  if [ $printusage -gt 0 -o ${usage_exit} -ne 0 ]; then
    echo " "
    usage
    if [ $printusage -gt 1 ]; then
      helpfid
    fi
    exit ${usage_exit}
  fi

  if [ $VERBOSE -gt 2 ]; then
    set -o xtrace
  fi

}
##########################################################################
helpfid() {
cat >&2 <<EOF
Expanded help on user defined fiducial volume cuts

Shape-based:
      [0][M]<SHAPE>:val1,val2,...
   "0" means reverse the cut (i.e. exclude the volume)
   "M" means the coordinates are given in the ROOT geometry
       "master" system and need to be transformed to "top vol" system
   <SHAPE> can be any of "zcyl" "box" "zpoly" "sphere"
       [each takes different # of args]
   This must be followed by a ":" and a list of values separated by 
   punctuation (allowed separators: commas , parentheses () braces {} 
   or brackets [] )
   Value mapping:
      zcly:x0,y0,radius,zmin,zmax           
          - cylinder along z at (x0,y0) capped at z's
      box:xmin,ymin,zmin,xmax,ymax,zmax
          - box w/ upper & lower extremes
      zpoly:nfaces,x0,y0,r_in,phi,zmin,zmax
          - nfaces sided polygon in x-y plane
      sphere:x0,y0,z0,radius
          - sphere of fixed radius at (x0,y0,z0)
   Examples:
      1) 0mbox:0,0,0.25,1,1,8.75
         exclude (i.e. reverse) a box in master coordinates w/
         corners (0,0,0.25) (1,1,8.75)
      2) mzpoly:6,(2,-1),1.75,0,{0.25,8.75}
         six sided polygon in x-y plane, centered at x,y=(2,-1) 
         w/ inscribed radius 1.75,  no rotation (so first face is in 
         y-z plane +r from center, i.e. hex sits on point)
         limited to the z range of {0.25,8.75} in the master ROOT 
         geom coordinates
      3) zcly:(3,4),5.5,-2,10
         a cylinder oriented parallel to the z axis in the "top vol" 
         coordinates at x,y=(3,4) with radius 5.5 and z range of {-2,10}

Rockbox:

   rockbox:(xmin,ymin,zmin)(xmax,ymax,zmax),rockonly,wallmin,dedx,fudge,efromw

   * (xmin,ymin,zmin)(xmax,ymax,zmax) :- define the extent of the (inner) 
      reference box in master world coordinates (always)
   * rockonly :-
        1 = generate only outside the reference box [default]
        0 = also generate events within the reference box (i.e. the detector) 
      by only excluding minuscule bubble
   * wallmin :- minimum size (geometry natural units) beyond reference 
      box size [default=800]
   * dedx :- estimated dE/dx losses, used to convert energy into box size 
      extension [default=2.5*1.7e-3]
   * fudge :- extra fudge factor for box size [default=1.05]
   * efromw :- expand from wall (or outer box) rather than wall just setting 
      a minimum size [default=0 or off]

   Only the 6 extent values are required; if others are supplied they must 
   be in the listed order. Punctuation is flexible, everything after the 
   rockbox: needs to be parsed into individual floating point values 
   separated by spaces, commas, parentheses, etc.

EOF
}

##########################################################################
create_bnbflux_xml() {
export GNUMIFLUXXML=$1
cat <<EOF > $GNUMIFLUXXML
<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- Configurations for GNuMI flux drive (handle BNB fluxes too of right form)
     Each is grouped into a <param_set> that are parsed and applied to
     GNuMIFlux.  Elements should appear in the following order:

     <verbose> : how noisy to be while parsing <param_set>
     <units>   : sets user coordinate units (e.g. "cm", "meter", etc)
                 set this first and only once
     <beamdir> : defines the relative orientation of the beam in user coord
                 three types are currently supported:
           "series"    : a sequence of rotations around one axis at a time
                         each <rotation> needs value and attributes:
                             axis ('x','y','z') units ('deg' 'rad')
           "thetaphi3" : 3 pairs of (theta,phi) ala GEANT3
                         needs 6 values and attribute: units
           "newxyz"    : 3 direction vectors, ala Geant4
                         needs 9 values (will normalize each vector)
     <beampos> :  define the beam origin in the user coordinate system
                  3 values define the point
                  if 6 values treat as ( user xyz ) = ( beam xyz )
                  but must have set <beamdir> first
     <window> :   define the flux window via three <point> elements
                  each <point> is a user coord (x,y,z)
     <enumax>:    set limits on the maximum enu energy:  lowlimit, fudgefactor
                  set limits on wgt: fudgefactor, # points to use
                  final reported energy is max(lowlimit,fudgefactor*enumxscan)
                  where is 'enumxscan' is the highest energy seen when
                  scanning for x-y weights.
     <reuse>:     set # of times an entry is sequentially reused
     <upstreamz>: user coord z to push neutrino orgin to
                  if abs(z) > 1e30 then leave on the flux window

     The units, beamdir, beampos elements define the user coordinate system
        user_dir =  rot * beam_dir
        user_pos = (rot * beam_pos ) + user_pos_beamorigin
     If more than one <beamdir> or <beampos> is specified the last
     one of each is used.  Results of rotations from <beamdir> elements
     are not cummulative.

     Parsing of element contents w/ multiple values is liberal about
     spacing, line breaks, grouping and separating characters.

  -->

<gnumi_config>

<!--
  ****************************************************************************
  **   ANNIE section
  ****************************************************************************
  -->

  <param_set name="ANNIE-tank">
    <!-- verbosity of XML parsing -->
    <verbose> 0 </verbose>

    <!-- setting user units should be first -->
    <units> m </units>

    <!-- rotation matrix set by 3 direction vectors, ala G4 -->
    <beamdir type="newxyz">
     [ 1  0  0 ]
     [ 0  1  0 ]
     [ 0  0  1 ]
    </beamdir>

    <!-- position of beam origin in user coords -->
    <!-- SciBooNE used 100.35m from MCZERO to calculate the flux -->
    <!-- use meters here -->
    <beampos> 0, 0, -100.35 </beampos>

    <!-- equivalent alternative -->
    <!-- position in ( user coords ) = ( beam coords ) -->
    <!--
    <beampos> ( 0, 0, 0.0 ) = ( 0, 0, 100.35 ) </beampos>
    -->

    <!-- define flux window in detector coords -->
    <!-- need 3 positions to define a rectoid -->
    <!-- first point is the base, 2nd & 3rd should be orthogonal points
         (ie 2nd 3rd point should not be kitty-corner from 1st) -->
    <!-- not yet support beam coords,
         but if/when must have already specified transform -->

    <!-- this window defines something suitible for just the tank -->
    <window>
      <point coord="det"> -3.0 -3.0 0.0 </point>
      <point coord="det"> -3.0 +3.0 0.0 </point>
      <point coord="det"> +3.0 -3.0 0.0 </point>
    </window>

    <!--
    default:  <enumax> 120. 1.05 1.05 2500000 </enumax>
    for booster max energy is never > 15
    -->
    <enumax> 15. 1.01 1.05 2500000 </enumax>

    <!-- allow entry to be reused 10 times before moving on -->
    <reuse> 1 </reuse>
    <!-- force ray orgin from flux window to user coord z = -1.0 -->
    <upstreamz> -1.0 </upstreamz>
  </param_set>

  <param_set name="ANNIE-rock">
    <!-- build off ANNIE-tank config to build ANNIE-rock -->
    <using_param_set> ANNIE-tank </using_param_set>
    <window>
      <point coord="det"> -10, -10, 0 </point>
      <point coord="det"> -10, +12, 0 </point>
      <point coord="det"> +10, -10, 0 </point>
    </window>
    <!-- move 20m upstream to start the neutrino ray -->
    <!-- not working w/ gevgen_numi: if -z flag not set then forces on flux window -->
    <!-- so use gevgen_numi -z -2000.0 for now -->
    <upstreamz> -20.0 </upstreamz>
  </param_set>
</gnumi_config>
EOF
}

##########################################################################
create_mymesg() {
export MYMESG=$1
# sadly utils::app_init::MesgThresholds() doesn't support multiple files
#export MSGLVL="--message-thresholds Messenger_production.xml,MyLog4CPP.xml"
# so concatenate things ... this is a nasty hack, assumes it knows where Messenger_production.xml is
msgbaselist="Messenger_production.xml Messenger_laconic.xml"
for msgbase in $msgbaselist
do
  for msgbasepath in . $GENIE/config $GENIEPHYOPTPATH
  do
    if [ -f ${msgbasepath}/${msgbase} ]; then
      echo "$b0: $MYMESG starting from ${msgbasepath}/${msgbase}"
      grep -v "</messenger_config>" ${msgbasepath}/${msgbase} > $MYMESG
      break
    fi
  done
  # for above break we really want out of two levels
  if [ -f $MYMESG ]; then break; fi
done
if [ ! -f $MYMESG ]; then
echo "$b0: could not find any of $msgbaselist"
cat <<EOF > $MYMESG
<?xml version="1.0" encoding="ISO-8859-1"?>
<messenger_config>
EOF
fi
cat <<EOF >> $MYMESG

  <!--
    $b0 additions
    Defines the priority levels for GENIE message streams

    The priority (in descending importance order) can be
    FATAL, ALERT, CRIT, ERROR, WARN, NOTICE, INFO, DEBUG
  -->
  <priority msgstream="EventGenerator">      WARN   </priority>
  <priority msgstream="EventGenerator">     ERROR   </priority>
  <priority msgstream="KNOHad">             ERROR   </priority>
  <!-- so logs show POT numbers -->
  <priority msgstream="gevgen_numi">       NOTICE   </priority>
  <priority msgstream="gevgen_fnal">       NOTICE   </priority>
</messenger_config>
EOF
}

##########################################################################
process_args "$@"

setup_genie
echo "setup complete"
echo " "

# executable is gevgen_numi; genie 2.9.0 and beyond it is: gevgen_fnal
# but provision for alternatives
#### gevgen_numi has a bug in -F <fitcut> for box parameter assignment
if [ $RWHNODE -eq 0 ]; then 
  export PATH=${PATH}:/annie/app/users/rhatcher/bin/:.
else
  export PATH=${PATH}:/Users/rhatcher/Work/ANNIE/bin:.
fi
hash -r  # rehash 
echo "PATH=${PATH}"
ls -l /annie/app/users/rhatcher/bin
ls -l /minos/app/users/rhatcher/annie/bin

EXETRYLIST="gevgen_fnal"

for etry in $EXETRYLIST
do
  EXE=`which $etry 2>/dev/null`
  if [ -n "$EXE" ]; then break; fi
done
if [ -z "$EXE" ]; then
  # not in current path ... try to fetch something from BlueArc
  echo "$b0: couldn't find an appropriate executable in standard path"
  echo "$b0: try using 'ifdh cp' from /annie/app/users/rhatcher/bin/"
  for etry in $EXETRYLIST
  do
    # trouble seeing annie disks on worker nodes via 'ifdh cp'
    # use minos as backup location
    for EXELOC in /pnfs/annie/persistent/users/rhatcher/bin
#RWH#/minos/app/users/rhatcher/annie/bin
#RWH#/annie/app/users/rhatcher/bin \
    do 
      echo "$b0: try using 'ifdh cp' $etry from ${EXELOC}"
      echo ifdh cp ${EXELOC}/$etry $etry
           ifdh cp ${EXELOC}/$etry $etry
      if [ ! -f $etry ]; then continue; fi
      chmod +x $etry
      hash -r  # rehash 
      EXE=`which $etry 2>/dev/null`
    done
    if [ -n "$EXE" ]; then 
      break
    else
       echo "$b0: copied exe, but 'which' doesn't see it"
    fi
  done
fi
if [ -z "$EXE" ]; then
  echo "$b0: failed to find either gevgen_numi_rock or gevgen_fnal executable"
  exit 127
fi
echo "using $EXE"

export GNUMIFLUXXML="BNBFlux${RUN}.xml"
# write the flux driver config file if necessary
if [ ! -f $GNUMIFLUXXML ]; then
  create_bnbflux_xml $GNUMIFLUXXML
fi
# allow GNuMIFlux driver to find config file for ANNIE BNB flux
export GXMLPATH=${GXMLPATH}:.


# sadly utils::app_init::MesgThresholds() doesn't support multiple files
# so we'll need to construct one ...
export MYMESG="./MyLog4CPP${RUN}.xml"
export MSGLVL="--message-thresholds $MYMESG"
if [ ! -f $MYMESG ]; then
  create_mymesg $MYMESG
fi

# create FIDCUT based on EFACTORS if set
if [ -n "$EFACTORS" ]; then
  E1=`echo $EFACTORS | cut -d, -f1`
  E2=`echo $EFACTORS | cut -d, -f2`
  E3=`echo $EFACTORS | cut -d, -f3`
  if [ -z "$E2" ]; then E2="$E1"; fi
  if [ -z "$E3" ]; then E3="$E2"; fi
  EXTENT=("${XYZBLDG[@]}")
  ADDITION=( -${E2} -${E2} -${E1} ${E2} ${E2} ${E3} )
  for i in `seq 0 5`  # bash array zero-index based
  do
    NEWEXTENT[$i]=`echo "scale=4; ${EXTENT[$i]} + ${ADDITION[$i]}" | bc`
  done
  COMPACT=`echo ${NEWEXTENT[@]} | tr " " ","`
  export FIDCUT="mbox:${COMPACT}"
  if [ $VERBOSE -gt 0 ]; then
    echo "EFACTORS=$EFACTORS"
    echo "E1=$E1 E2=$E2 E3=$E3"
    echo "START ${EXTENT[@]}"
    echo "ADDITION ${ADDITION[@]}"
    echo "NEWEXTENT ${NEWEXTENT[@]}"
  fi
  echo "constructed FIDCUT $FIDCUT"
fi

# create FIDCUT based on RFACTORS if set
if [ -n "$RFACTORS" ]; then
  export RFACTORS="${RFACTORS},,,,,,,,,,,,,,,,"
  export FIDCUT="rockbox:"
  # bas array zero-index based
  export FIDCUT="${FIDCUT}(${XYZBLDG[0]},${XYZBLDG[1]},${XYZBLDG[2]})"
  export FIDCUT="${FIDCUT}(${XYZBLDG[3]},${XYZBLDG[4]},${XYZBLDG[5]})"
  rockonly=`echo $RFACTORS | cut -d, -f1`
  if [ -z "$rockonly" ]; then
    rockonly=1
  else
    minsize=`echo $RFACTORS | cut -d, -f2`
    if [ -n "$minsize" ]; then
      minsize=",$minsize"
      dedx=`echo $RFACTORS | cut -d, -f3`
      if [ -n "$dedx" ]; then
        dedx=",$dedx"
        fudge=`echo $RFACTORS | cut -d, -f4`
        if [ -n "$fudge" ]; then
          fudge=",$fudge"
          efromw=`echo $RFACTORS | cut -d, -f5`
          if [ -n "$efromw" ]; then
            efromw=",$efromw"
          fi
        fi
      fi
    fi
  fi
  export FIDCUT="${FIDCUT}${rockonly}${minsize}${dedx}${fudge}${efromw}"
  echo "constructed FIDCUT $FIDCUT"
fi
# do I have a local copy of the geometry?
GDMLBASE=`basename $GDML`
if [ ! -f $GDMLBASE ]; then
  # no?
  echo "$b0: no local copy of geometry, attempt to fetch one"
  # try simple copy
  cp $GDML $GDMLBASE
  if [ ! -f $GDMLBASE ]; then
    # still no?
    if [ $RWHNODE -eq 0 ]; then
      # is /annie/data not visible on worker nodes via 'ifdh cp'?
      # use pnfs (with minos as a backup)
      for GEOMLOC in /pnfs/annie/persistent/users/mnieslon/genie/geometry
#\
#                     /annie/data/geometry \
#                     /minos/data/users/rhatcher/annie/geometry
      do 
        echo "$b0: try using 'ifdh cp' from ${GEOMLOC}"
        echo ifdh cp ${GEOMLOC}/$GDMLBASE $GDMLBASE
             ifdh cp ${GEOMLOC}/$GDMLBASE $GDMLBASE
          if [ -f $GDMLBASE ]; then break; fi
      done
    else
      cp /Users/rhatcher/Work/ANNIE/geometry/$GDMLBASE $GDMLBASE
    fi
  fi
fi
if [ -f $GDMLBASE ]; then
  echo "$b0: using geoemtry file $GDMLBASE "
else
  echo "$b0: still no geoemtry file ... abort "
  ISAFS=`echo $PWD | cut -d/ -f2 | grep -c afs`
  if [ $ISAFS -ne 0 ]; then
    echo "$b0: working directory can't be AFS (PWD=$PWD)"
  fi
  exit 127
fi

# on BlueArc 5000 files, for about 6558 MB total
#    /annie/data/flux/bnb/bnb_annie_????.root   ?=[0:9]
# make a sub-selection of files to use for any given run
#export FLUX="/annie/data/flux/bnb/bnb_annie_*.root,${FLXPSET}"
if [ $RWHNODE -ne 0 ]; then
  # on my laptop I've already only have a subset
  export FLUX="/Users/rhatcher/Work/ANNIE/flux/bnb/bnb_annie_*.root,${FLXPSET}"
else
  # make a local copy of 10 files based on a simple algorithm
  #   assume 5000 files (i.e. 500 groups of 10)
  FLXDIR="local_flux"
  let flxgrp=${RUN}%500
  flxgrp3=`printf "%03d" $flxgrp`
  if [ ! -d $FLXDIR ]; then mkdir -p $FLXDIR; fi
  for i in `seq 0 9`
  do
     flxbase=bnb_annie_${flxgrp3}${i}.root
     if [ ! -f $FLXDIR/$flxbase ]; then
       # need a local copy
       # use pnfs as primary (minos as a backup) ...
       for FLUXLOC in /pnfs/annie/persistent/flux/bnb 
#\
#                      /annie/data/flux/bnb \
#                      /minos/data/users/rhatcher/annie/flux/bnb
       do 
         echo "attempt ifdh cp ${FLUXLOC}/${flxbase} $FLXDIR/${flxbase}"
                       ifdh cp ${FLUXLOC}/${flxbase} $FLXDIR/${flxbase}
         if [ -f $FLXDIR/${flxbase} ]; then continue; fi
       done
     fi
  done
  export FLUX="$FLXDIR/bnb_annie_${flxgrp3}*.root,${FLXPSET}"
fi

# put it all together
XSEC="--cross-sections $GENIEXSECFILE"   # previously defined by: setup genie_xsec

# max pathlength file ... for now just write what we got
export MAXPL="-m +ANNIE-${RUN}.maxpl.xml"   # create & write it
#MAXPL="-m  ANNIE-rock.maxpl.xml"   # use existing file

if [ -n "$SEED" ]; then
  SEEDFLG="--seed $SEED"
fi
if [ -n "$TOPVOL" ]; then
  TOPVOLFLG="-t $TOPVOL"
fi
if [ -n "$ZMIN" ]; then
  ZMINFLG="-z $ZMIN" #  eg. -z -2000"  # start at z = -20m
fi
if [ -n "$FIDCUT" ]; then
  # fiducial volume cut ... 2.8.6 doesn't have rock box??? 2.9.0 doesn't either!
  export FIDFLG="-F $FIDCUT"
fi
if [ -n "$GENLIST" ]; then
  export GENFLG="--event-generator-list $GENLIST"
fi

echo " "
NOWS=`date "+%s"`
DATES=`date "+%Y-%m-%d %H:%M:%S"`
echo "checkpoint start @ ${DATES} s=${NOWS}"
echo " "

echo $EXE -r $RUN $SEEDFLG $TOPVOLFLG -f $FLUX -g $GDML $UNITS $XSEC $GENFLG $MAXPL $LIMIT $MSGLVL $FIDFLG $ZMINFLG
     $EXE -r $RUN $SEEDFLG $TOPVOLFLG -f $FLUX -g $GDML $UNITS $XSEC $GENFLG $MAXPL $LIMIT $MSGLVL $FIDFLG $ZMINFLG > gntp.${RUN}.ghep.log 2>&1
cat gntp.${RUN}.ghep.log

echo " "
NOWF=`date "+%s"`
DATEF=`date "+%Y-%m-%d %H:%M:%S"`
let DS=${NOWF}-${NOWS}
echo "checkpoint finish @ ${DATEF} s=${NOWF}  ds=${DS}"
echo " "

##########################################################################
# here's where copy-back code should live
# use 'ifdh cp <from> <to>' for grid compatibility
# files of interest
#    gntp.${RUN}.ghep.root      # primary output
#
#    annie_*.gdml               # fetched GDML geometry
#    BNBFlux${RUN}.xml          # created flux config
#    MyLog4CPP.xml              # created messenger thresholds
#    genie-mcjob-${RUN}.status  # status file
#    ANNIE-${RUN}.maxpl.xml     # max pathlength file
#    [UserPhysicsOptions.xml]   # possibly local copy

#set -o xtrace
export GZIP="-9 -v"

if [ -f UserPhysicsOptions.xml ]; then ADDUPO=UserPhysicsOptions.xml ; fi
tar cvzf gntp.${RUN}.ghep.aux.tar.gz gntp.${RUN}.ghep.log \
             BNBFlux${RUN}.xml MyLog4CPP${RUN}.xml \
             genie-mcjob-${RUN}.status ANNIE-${RUN}.maxpl.xml $ADDUPO

  for f in gntp.${RUN}.ghep.root gntp.${RUN}.ghep.*.tar.gz
  do 
    ifdh cp ${f} ${OUTDIR}/${f}
  done

#set +o xtrace

# end-of-script
